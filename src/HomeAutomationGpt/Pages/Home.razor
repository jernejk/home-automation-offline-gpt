@* Voice-first control UI with activity feed for demo clarity *@
@page "/"

<PageTitle>Home Automation</PageTitle>

<div class="ha-grid">
    <section class="panel devices">
        <div class="panel-header">
            <h3>Devices</h3>
            <div class="add-device">
                <input @bind="NewDeviceName" placeholder="Add device" class="form-control form-control-sm" />
                <button class="btn btn-sm btn-primary" @onclick="AddDevice">Add</button>
            </div>
        </div>
        <div class="device-list">
            @foreach (var d in Devices)
            {
                <div class="device-card">
                    <div class="device-row">
                        <div class="device-name">@d.Name</div>
                        <div class="device-toggle form-check form-switch">
                            <input class="form-check-input" type="checkbox" role="switch" checked="@d.IsOn" @onchange="(e)=> ToggleDevice(d, e.Value is bool b && b)" />
                        </div>
                    </div>
                    <div class="device-controls">
                        @if (SupportsValue(d))
                        {
                            <input type="range" class="form-range" min="@GetMin(d)" max="@GetMax(d)" step="@GetStep(d)" value="@GetDisplayValue(d)"
                                   @oninput="(e)=> ChangeDeviceValue(d, ParseFloat(e.Value))" />
                            <div class="value-chip">@FormatValue(d)</div>
                        }
                    </div>
                </div>
            }
        </div>
    </section>

    <section class="panel control">
        <div class="control-header">
            <h2>Home Assistant</h2>
            <div class="voice-controls">
                <button class="@GetMicButtonClass()" @onclick="ToggleListening" title="@GetMicButtonTitle()">
                    <span class="@GetMicIconClass()"></span>
                </button>
                <div class="@GetVoiceStatusClass()">@GetVoiceStatusText()</div>
            </div>
        </div>

        <div class="quick-prompts">
            @foreach (var qp in QuickPrompts)
            {
                <button class="btn btn-sm btn-outline-secondary" @onclick="() => UseQuickPrompt(qp)">@qp</button>
            }
        </div>

        <div class="command-box">
            <textarea class="form-control" rows="4" placeholder="Tell me what to do…" @bind="Command"></textarea>
            <div class="command-actions">
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="autosend" @bind="AutoSendVoice" />
                    <label class="form-check-label" for="autosend">Auto-send voice</label>
                </div>
                <div class="spacer"></div>
                <button class="btn btn-primary" @onclick="SendCommand">Send</button>
            </div>
        </div>

        @if (!string.IsNullOrWhiteSpace(SpeakText))
        {
            <div class="speak-box">
                <span class="bi bi-megaphone-fill"></span>
                <div>
                    <div class="speak-title">Assistant will say</div>
                    <div class="speak-text">@SpeakText</div>
                </div>
            </div>
        }
    </section>

    <section class="panel activity">
        <div class="tabs">
            <button class="@GetTabClass("activity")" @onclick="@(() => SetActiveTab("activity"))">Activity</button>
            <button class="@GetTabClass("debug")" @onclick="@(() => SetActiveTab("debug"))">Debug</button>
            <div style="flex:1"></div>
            <button class="btn btn-sm btn-outline-danger" @onclick="ClearEvents" disabled="@(Activity.Count == 0)"><span class="bi bi-trash"></span> Clear</button>
        </div>

        @if (ActiveTab == "activity")
        {
            <div class="activity-feed">
                @foreach (var ev in Activity.AsEnumerable().Reverse())
                {
                    <div class="event @ev.Type.ToLower()">
                        <div class="event-meta">
                            <span class="badge bg-@GetBadge(ev.Type)">@ev.Type</span>
                            <span class="time">@ev.Timestamp.ToLocalTime().ToString("HH:mm:ss")</span>
                        </div>
                        <div class="event-msg">@ev.Message</div>
                        @if (!string.IsNullOrWhiteSpace(ev.Details))
                        {
                            <pre class="event-details">@ev.Details</pre>
                        }
                    </div>
                }
            </div>
        }
        else
        {
            <div class="debug-pane">
                <div class="form-check mb-2">
                    <input class="form-check-input" type="checkbox" id="showdbg" @bind="ShowDebug" />
                    <label class="form-check-label" for="showdbg">Show debug</label>
                </div>
                @if (ShowDebug || IsRequestFailed)
                {
                    <div class="mb-2"><strong>Debug:</strong> @Debug</div>
                    <div>
                        <strong>Raw Response:</strong>
                        <pre class="event-details">@Response</pre>
                    </div>
                }
            </div>
        }
    </section>
</div>
